//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/PlayerController.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerController : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerController()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerController"",
    ""maps"": [
        {
            ""name"": ""Touch"",
            ""id"": ""13045594-5ef4-4e5e-be26-96f9b765d476"",
            ""actions"": [
                {
                    ""name"": ""Position"",
                    ""type"": ""Value"",
                    ""id"": ""31a44f7b-27ed-40fd-bd87-da21d78418f6"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Shake"",
                    ""type"": ""Value"",
                    ""id"": ""1c0ff33e-de7e-4ebf-83ef-8f88c131f335"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Touch Itself"",
                    ""type"": ""Value"",
                    ""id"": ""dc71f56f-7b6e-44ef-bad3-80f677bef46a"",
                    ""expectedControlType"": ""Touch"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""Button"",
                    ""id"": ""d7096d2c-2d9c-44be-9368-f6d19860cac4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Touch Phase"",
                    ""type"": ""Value"",
                    ""id"": ""4292ab17-8283-4b38-98ea-18217af3e33d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Touch Press"",
                    ""type"": ""Value"",
                    ""id"": ""9e22c542-8268-4e72-98b4-193287eaa0f0"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Swipe"",
                    ""type"": ""Value"",
                    ""id"": ""9a4529d0-a34e-472d-9267-7ff67c0e7147"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""9a643eea-0abe-4cf4-9c7d-83db80589fb9"",
                    ""path"": ""<Touchscreen>/primaryTouch/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dc32f612-7359-4753-ad3c-fc98e95c3090"",
                    ""path"": ""<Touchscreen>/primaryTouch/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""76177c80-eb02-410d-8d81-4daec19346a9"",
                    ""path"": ""<Touchscreen>/primaryTouch"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch Itself"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f7fbcf18-29e2-4a0d-9965-d3060c8ab044"",
                    ""path"": ""<Touchscreen>/touch0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch Itself"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f70f312f-fc60-4c27-b315-6c70e87d4182"",
                    ""path"": ""<Touchscreen>/primaryTouch"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch Itself"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""018a9e31-3182-491e-b59e-21c48a1598c7"",
                    ""path"": ""<Touchscreen>/touch0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch Itself"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7fd404e6-3dbd-4657-a0a5-98bb90ac2fb7"",
                    ""path"": ""<Touchscreen>/primaryTouch/tap"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""71488ee4-69e6-41be-8b30-99ee63d23b96"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ff2c156d-c97b-4269-8184-fe2bd46ffc88"",
                    ""path"": ""<Touchscreen>/primaryTouch/phase"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch Phase"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fd29b3cc-f6a8-44a3-b4c9-b936d916e80e"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch Phase"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7c960acc-1524-4037-9cf6-2acd9fb9511c"",
                    ""path"": ""<Touchscreen>/touch0/phase"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch Phase"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2df15c23-5616-4eae-a1c9-d9b626cf53d3"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""988eff51-2822-424e-86bc-ab78aa310401"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""76c2d2d1-9481-4690-9552-a54cc1e1cf47"",
                    ""path"": ""<Touchscreen>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Swipe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""29b2b953-a8fe-4260-9e2c-55f2314c3e1a"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Swipe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Move"",
            ""id"": ""4f9d701d-baa2-4873-815f-e86b8f836f54"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""02a2e0c3-e0b6-46f4-a910-a7ecdbdb3969"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""PassThrough"",
                    ""id"": ""58b2abd8-d135-492b-a59a-f850fe434480"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look Trigger"",
                    ""type"": ""Button"",
                    ""id"": ""dd517104-685f-4202-8ee7-0ea398dda5a1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cursor Position"",
                    ""type"": ""Value"",
                    ""id"": ""e47bd5bd-5d9e-4d8a-80bb-a8b254d7aecd"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""6947fdca-cea6-4782-a2b8-77fccb2c35fd"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""17ae82ea-5f34-403b-9071-bd066d162001"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look Trigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b4857871-9a75-4211-be71-e0c9380a3b31"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look Trigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9953d1a5-3344-4877-8df4-8576f6ec86bf"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cursor Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""3D Vector"",
                    ""id"": ""f1447c35-9ba7-46da-9bf9-038fd6b1fe4b"",
                    ""path"": ""3DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""43f38afd-1805-4291-b16b-8d6821760019"",
                    ""path"": ""<Keyboard>/#(E)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""34381eb0-ac10-4b50-a19d-0f241ae94ab7"",
                    ""path"": ""<Keyboard>/#(Q)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""b663f15e-1e6c-4a9c-8f97-4d0d12d809fc"",
                    ""path"": ""<Keyboard>/#(A)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""20050b80-79a1-45a2-8db5-fc169d766296"",
                    ""path"": ""<Keyboard>/#(D)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""forward"",
                    ""id"": ""ed092111-42ad-485f-8e1c-882d57b050a1"",
                    ""path"": ""<Keyboard>/#(W)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""backward"",
                    ""id"": ""e685ad5b-61c4-47ac-8515-55d1f2efe409"",
                    ""path"": ""<Keyboard>/#(S)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Touch
        m_Touch = asset.FindActionMap("Touch", throwIfNotFound: true);
        m_Touch_Position = m_Touch.FindAction("Position", throwIfNotFound: true);
        m_Touch_Shake = m_Touch.FindAction("Shake", throwIfNotFound: true);
        m_Touch_TouchItself = m_Touch.FindAction("Touch Itself", throwIfNotFound: true);
        m_Touch_Click = m_Touch.FindAction("Click", throwIfNotFound: true);
        m_Touch_TouchPhase = m_Touch.FindAction("Touch Phase", throwIfNotFound: true);
        m_Touch_TouchPress = m_Touch.FindAction("Touch Press", throwIfNotFound: true);
        m_Touch_Swipe = m_Touch.FindAction("Swipe", throwIfNotFound: true);
        // Move
        m_Move = asset.FindActionMap("Move", throwIfNotFound: true);
        m_Move_Move = m_Move.FindAction("Move", throwIfNotFound: true);
        m_Move_Look = m_Move.FindAction("Look", throwIfNotFound: true);
        m_Move_LookTrigger = m_Move.FindAction("Look Trigger", throwIfNotFound: true);
        m_Move_CursorPosition = m_Move.FindAction("Cursor Position", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Touch
    private readonly InputActionMap m_Touch;
    private ITouchActions m_TouchActionsCallbackInterface;
    private readonly InputAction m_Touch_Position;
    private readonly InputAction m_Touch_Shake;
    private readonly InputAction m_Touch_TouchItself;
    private readonly InputAction m_Touch_Click;
    private readonly InputAction m_Touch_TouchPhase;
    private readonly InputAction m_Touch_TouchPress;
    private readonly InputAction m_Touch_Swipe;
    public struct TouchActions
    {
        private @PlayerController m_Wrapper;
        public TouchActions(@PlayerController wrapper) { m_Wrapper = wrapper; }
        public InputAction @Position => m_Wrapper.m_Touch_Position;
        public InputAction @Shake => m_Wrapper.m_Touch_Shake;
        public InputAction @TouchItself => m_Wrapper.m_Touch_TouchItself;
        public InputAction @Click => m_Wrapper.m_Touch_Click;
        public InputAction @TouchPhase => m_Wrapper.m_Touch_TouchPhase;
        public InputAction @TouchPress => m_Wrapper.m_Touch_TouchPress;
        public InputAction @Swipe => m_Wrapper.m_Touch_Swipe;
        public InputActionMap Get() { return m_Wrapper.m_Touch; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TouchActions set) { return set.Get(); }
        public void SetCallbacks(ITouchActions instance)
        {
            if (m_Wrapper.m_TouchActionsCallbackInterface != null)
            {
                @Position.started -= m_Wrapper.m_TouchActionsCallbackInterface.OnPosition;
                @Position.performed -= m_Wrapper.m_TouchActionsCallbackInterface.OnPosition;
                @Position.canceled -= m_Wrapper.m_TouchActionsCallbackInterface.OnPosition;
                @Shake.started -= m_Wrapper.m_TouchActionsCallbackInterface.OnShake;
                @Shake.performed -= m_Wrapper.m_TouchActionsCallbackInterface.OnShake;
                @Shake.canceled -= m_Wrapper.m_TouchActionsCallbackInterface.OnShake;
                @TouchItself.started -= m_Wrapper.m_TouchActionsCallbackInterface.OnTouchItself;
                @TouchItself.performed -= m_Wrapper.m_TouchActionsCallbackInterface.OnTouchItself;
                @TouchItself.canceled -= m_Wrapper.m_TouchActionsCallbackInterface.OnTouchItself;
                @Click.started -= m_Wrapper.m_TouchActionsCallbackInterface.OnClick;
                @Click.performed -= m_Wrapper.m_TouchActionsCallbackInterface.OnClick;
                @Click.canceled -= m_Wrapper.m_TouchActionsCallbackInterface.OnClick;
                @TouchPhase.started -= m_Wrapper.m_TouchActionsCallbackInterface.OnTouchPhase;
                @TouchPhase.performed -= m_Wrapper.m_TouchActionsCallbackInterface.OnTouchPhase;
                @TouchPhase.canceled -= m_Wrapper.m_TouchActionsCallbackInterface.OnTouchPhase;
                @TouchPress.started -= m_Wrapper.m_TouchActionsCallbackInterface.OnTouchPress;
                @TouchPress.performed -= m_Wrapper.m_TouchActionsCallbackInterface.OnTouchPress;
                @TouchPress.canceled -= m_Wrapper.m_TouchActionsCallbackInterface.OnTouchPress;
                @Swipe.started -= m_Wrapper.m_TouchActionsCallbackInterface.OnSwipe;
                @Swipe.performed -= m_Wrapper.m_TouchActionsCallbackInterface.OnSwipe;
                @Swipe.canceled -= m_Wrapper.m_TouchActionsCallbackInterface.OnSwipe;
            }
            m_Wrapper.m_TouchActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Position.started += instance.OnPosition;
                @Position.performed += instance.OnPosition;
                @Position.canceled += instance.OnPosition;
                @Shake.started += instance.OnShake;
                @Shake.performed += instance.OnShake;
                @Shake.canceled += instance.OnShake;
                @TouchItself.started += instance.OnTouchItself;
                @TouchItself.performed += instance.OnTouchItself;
                @TouchItself.canceled += instance.OnTouchItself;
                @Click.started += instance.OnClick;
                @Click.performed += instance.OnClick;
                @Click.canceled += instance.OnClick;
                @TouchPhase.started += instance.OnTouchPhase;
                @TouchPhase.performed += instance.OnTouchPhase;
                @TouchPhase.canceled += instance.OnTouchPhase;
                @TouchPress.started += instance.OnTouchPress;
                @TouchPress.performed += instance.OnTouchPress;
                @TouchPress.canceled += instance.OnTouchPress;
                @Swipe.started += instance.OnSwipe;
                @Swipe.performed += instance.OnSwipe;
                @Swipe.canceled += instance.OnSwipe;
            }
        }
    }
    public TouchActions @Touch => new TouchActions(this);

    // Move
    private readonly InputActionMap m_Move;
    private IMoveActions m_MoveActionsCallbackInterface;
    private readonly InputAction m_Move_Move;
    private readonly InputAction m_Move_Look;
    private readonly InputAction m_Move_LookTrigger;
    private readonly InputAction m_Move_CursorPosition;
    public struct MoveActions
    {
        private @PlayerController m_Wrapper;
        public MoveActions(@PlayerController wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Move_Move;
        public InputAction @Look => m_Wrapper.m_Move_Look;
        public InputAction @LookTrigger => m_Wrapper.m_Move_LookTrigger;
        public InputAction @CursorPosition => m_Wrapper.m_Move_CursorPosition;
        public InputActionMap Get() { return m_Wrapper.m_Move; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MoveActions set) { return set.Get(); }
        public void SetCallbacks(IMoveActions instance)
        {
            if (m_Wrapper.m_MoveActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_MoveActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_MoveActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_MoveActionsCallbackInterface.OnMove;
                @Look.started -= m_Wrapper.m_MoveActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_MoveActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_MoveActionsCallbackInterface.OnLook;
                @LookTrigger.started -= m_Wrapper.m_MoveActionsCallbackInterface.OnLookTrigger;
                @LookTrigger.performed -= m_Wrapper.m_MoveActionsCallbackInterface.OnLookTrigger;
                @LookTrigger.canceled -= m_Wrapper.m_MoveActionsCallbackInterface.OnLookTrigger;
                @CursorPosition.started -= m_Wrapper.m_MoveActionsCallbackInterface.OnCursorPosition;
                @CursorPosition.performed -= m_Wrapper.m_MoveActionsCallbackInterface.OnCursorPosition;
                @CursorPosition.canceled -= m_Wrapper.m_MoveActionsCallbackInterface.OnCursorPosition;
            }
            m_Wrapper.m_MoveActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @LookTrigger.started += instance.OnLookTrigger;
                @LookTrigger.performed += instance.OnLookTrigger;
                @LookTrigger.canceled += instance.OnLookTrigger;
                @CursorPosition.started += instance.OnCursorPosition;
                @CursorPosition.performed += instance.OnCursorPosition;
                @CursorPosition.canceled += instance.OnCursorPosition;
            }
        }
    }
    public MoveActions @Move => new MoveActions(this);
    public interface ITouchActions
    {
        void OnPosition(InputAction.CallbackContext context);
        void OnShake(InputAction.CallbackContext context);
        void OnTouchItself(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
        void OnTouchPhase(InputAction.CallbackContext context);
        void OnTouchPress(InputAction.CallbackContext context);
        void OnSwipe(InputAction.CallbackContext context);
    }
    public interface IMoveActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnLookTrigger(InputAction.CallbackContext context);
        void OnCursorPosition(InputAction.CallbackContext context);
    }
}
